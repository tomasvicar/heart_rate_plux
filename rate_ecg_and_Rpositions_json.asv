clc;clear all; close all;


path = '../Sada_02';
save_path = '../results_vo_rate_Rpos';



rng(42)
pauza = 0.5;

data_names = subdir([path '/*.txt']);
data_names = {data_names.name};


for file_num = 1:length(data_names)


    signal_file_name = data_names{file_num};
    video_file_name = replace(signal_file_name,'.txt','.avi');
    
    vidObj = VideoReader(video_file_name);

    video_num_frames = vidObj.NumFrames;
    fps = vidObj.FrameRate;

    data = readtable(signal_file_name,'Delimiter',';');

    triger = data.Var5;

    [~,frame_positions_idx] = findpeaks( diff(triger),'MinPeakHeight',10000,'MinPeakDistance', (1000/fps)*0.6 );
    frame_positions_idx(frame_positions_idx < 500) = [];

%     plot(triger);
%     hold on
%     plot(frame_positions_time,32820*ones(1,length(frame_positions_time)),'*');
%     hold off
        


    if length(frame_positions_idx) ~= video_num_frames
        error("spatny pocet")
    end


    frame_idx_signal = nan(1,length(triger));
    frame_idx_signal(frame_positions_idx) = 1:length(frame_positions_idx);
    frame_idx_signal = fillmissing(frame_idx_signal,'linear','EndValues','none');


    frame_positions_idx_wl1 = frame_positions_idx(1:2:end);
    frame_idx_signal_wl1 = nan(1,length(triger));
    frame_idx_signal_wl1(frame_positions_idx_wl1) = 1:length(frame_positions_idx_wl1);
    frame_idx_signal_wl1 = fillmissing(frame_idx_signal_wl1,'linear','EndValues','none');


    frame_positions_idx_wl2 = frame_positions_idx(2:2:end);
    frame_idx_signal_wl2 = nan(1,length(triger));
    frame_idx_signal_wl2(frame_positions_idx_wl2) = 1:length(frame_positions_idx_wl2);
    frame_idx_signal_wl2 = fillmissing(frame_idx_signal_wl2,'linear','EndValues','none');


    ecg = data.Var3;


    ecg_filtered = medfilt1(ecg,10,'truncate');
    ecg_filtered = gaussfilt_signal(ecg_filtered,10);
    ecg_filtered = ecg_filtered - gaussfilt_signal(ecg_filtered,200);


    for_detection = ecg_filtered - gaussfilt_signal(ecg_filtered,5);
    for_detection = -for_detection;


    v_max = max(for_detection(:)) ;
    v_min = min(for_detection(:)) ;

    if v_max < -v_min

        for_detection = -for_detection;
    end


    v_max = max(for_detection(:)) ;
    v_min = min(for_detection(:)) ;
    range = v_max - v_min;

    threshold = v_max / 4;
    prominence = range / 2;

    if strcmp(signal_file_name, '..\Sada_02\Gacr_02_020_001_dual_m\Gacr_02_020_001_dual_m.txt')
        threshold = threshold/2;
        prominence = prominence/2;
    end

    max_rate = 125;
    [~,detected_qrs_position] = findpeaks( for_detection,'MinPeakHeight',threshold,'MinPeakProminence',prominence,'MinPeakDistance', 1000*(1/(max_rate/60)) );


    heart_rate = (1 / ((detected_qrs_position(end) - detected_qrs_position(1)) / (1000 * length(detected_qrs_position))) )* 60;

    
    trigger_positions = frame_positions_idx;
    trigger_positions_wl1 = frame_positions_idx_wl1;
    trigger_positions_wl2 = frame_positions_idx_wl2;


    R_positions_frame_idx = frame_idx_signal(detected_qrs_position);
    R_positions_signal_idx_all = detected_qrs_position;
    R_positions_signal_idx = detected_qrs_position(~isnan(R_positions_frame_idx));
    R_positions_frame_idx = R_positions_frame_idx(~isnan(R_positions_frame_idx))';

    R_positions_frame_idx_wl1 = frame_idx_signal_wl1(detected_qrs_position);
    R_positions_frame_idx_wl1 = R_positions_frame_idx_wl1(~isnan(R_positions_frame_idx_wl1))';

    R_positions_frame_idx_wl2 = frame_idx_signal_wl2(detected_qrs_position);
    R_positions_frame_idx_wl2 = R_positions_frame_idx_wl2(~isnan(R_positions_frame_idx_wl2))';


    hold off
    plot(for_detection)
    hold on
    plot(detected_qrs_position,threshold*ones(1,length(detected_qrs_position)),'*');

    [~,tmp,~] = fileparts(signal_file_name);
    title([num2str(heart_rate)  '   ' num2str(file_num) '  ' replace(tmp,'_','-')])
%     pause(pauza)


%     if contains(tmp,'Gacr_01_014')
%         R_positions_frame_idx = 'error - noisy ECG';
%         R_positions_signal_idx = 'error - noisy ECG';
%         heart_rate = 'error - noisy ECG';
%     end

    s = struct();
    s.R_positions_frame_idx = R_positions_frame_idx;
    s.R_positions_signal_idx = R_positions_signal_idx;
    s.R_positions_frame_idx_wl1 = R_positions_frame_idx_wl1;
    s.R_positions_frame_idx_wl2 = R_positions_frame_idx_wl2;
    s.note = 'index start from 1 (matlab notation); R_positions_frame_idxs are positions of R-wave in video frame units, R_positions_frame_idx_wl1 and wl2 are poistions of R-wave in video frame units of video wl1 or wl2, R_positions_signal_idx is in signal index units';

    json_data = jsonencode(s);

    [~,tmp,~] = fileparts(signal_file_name);
    tmp = replace(tmp,'.txt','');
    fname = [save_path '/' tmp '/BiosignalAnalysis' '/' tmp  '_R_positions.json'];
    
    disp(tmp)

    mkdir(fileparts(fname))

    fileID = fopen(fname,'w');
    fprintf(fileID, json_data);
    fclose(fileID);



    s = struct();
    s.heart_rate = heart_rate;
    s.note = 'beats per minute measured from ecg';
    json_data = jsonencode(s);

    [~,tmp,~] = fileparts(signal_file_name);
    tmp = replace(tmp,'.txt','');
    fname = [save_path '/' tmp '/BiosignalAnalysis' '/' tmp  '_heart_rate.json'];
    
%     disp(tmp)

    mkdir(fileparts(fname))

    fileID = fopen(fname,'w');
    fprintf(fileID, json_data);
    fclose(fileID);



    s = struct();
    s.trigger_positions = trigger_positions;
    s.trigger_positions_wl1 = trigger_positions_wl1;
    s.trigger_positions_wl2 = trigger_positions_wl2;
    s.note = 'index start from 1 (matlab notation), detected trigger positions, wl1 and wl2 are for 1 and 2 wavelength video';
    json_data = jsonencode(s);

    [~,tmp,~] = fileparts(signal_file_name);
    tmp = replace(tmp,'.txt','');
    fname = [save_path '/' tmp '/BiosignalAnalysis' '/' tmp  '_trigger_positions.json'];
    
%     disp(tmp)

    mkdir(fileparts(fname))

    fileID = fopen(fname,'w');
    fprintf(fileID, json_data);
    fclose(fileID);

end




